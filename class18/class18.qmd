---
title: "Class 18: Pertussis Mini Project"
author: "Sion Kang (PID: A17052234)"
date: 03/06/25
format: pdf
---

Pertussis (a.k.a.) Whooping Cough is a deadly lung infection caused by the bacteria B. Pertussis. 

The CDC tracks Pertussis cases around the US. At https://tinyurl.com/pertussiscdc

We can "scrape" this data using the R **datapasta** package. 

```{r, include=FALSE}
cdc <- data.frame(
  year = c(
    1922L,
    1923L,
    1924L,
    1925L,
    1926L,
    1927L,
    1928L,
    1929L,
    1930L,
    1931L,
    1932L,
    1933L,
    1934L,
    1935L,
    1936L,
    1937L,
    1938L,
    1939L,
    1940L,
    1941L,
    1942L,
    1943L,
    1944L,
    1945L,
    1946L,
    1947L,
    1948L,
    1949L,
    1950L,
    1951L,
    1952L,
    1953L,
    1954L,
    1955L,
    1956L,
    1957L,
    1958L,
    1959L,
    1960L,
    1961L,
    1962L,
    1963L,
    1964L,
    1965L,
    1966L,
    1967L,
    1968L,
    1969L,
    1970L,
    1971L,
    1972L,
    1973L,
    1974L,
    1975L,
    1976L,
    1977L,
    1978L,
    1979L,
    1980L,
    1981L,
    1982L,
    1983L,
    1984L,
    1985L,
    1986L,
    1987L,
    1988L,
    1989L,
    1990L,
    1991L,
    1992L,
    1993L,
    1994L,
    1995L,
    1996L,
    1997L,
    1998L,
    1999L,
    2000L,
    2001L,
    2002L,
    2003L,
    2004L,
    2005L,
    2006L,
    2007L,
    2008L,
    2009L,
    2010L,
    2011L,
    2012L,
    2013L,
    2014L,
    2015L,
    2016L,
    2017L,
    2018L,
    2019L,
    2020L,
    2021L,
    2022L,
    2024L
  ),
  cases = c(
    107473,
    164191,
    165418,
    152003,
    202210,
    181411,
    161799,
    197371,
    166914,
    172559,
    215343,
    179135,
    265269,
    180518,
    147237,
    214652,
    227319,
    103188,
    183866,
    222202,
    191383,
    191890,
    109873,
    133792,
    109860,
    156517,
    74715,
    69479,
    120718,
    68687,
    45030,
    37129,
    60886,
    62786,
    31732,
    28295,
    32148,
    40005,
    14809,
    11468,
    17749,
    17135,
    13005,
    6799,
    7717,
    9718,
    4810,
    3285,
    4249,
    3036,
    3287,
    1759,
    2402,
    1738,
    1010,
    2177,
    2063,
    1623,
    1730,
    1248,
    1895,
    2463,
    2276,
    3589,
    4195,
    2823,
    3450,
    4157,
    4570,
    2719,
    4083,
    6586,
    4617,
    5137,
    7796,
    6564,
    7405,
    7298,
    7867,
    7580,
    9771,
    11647,
    25827,
    25616,
    15632,
    10454,
    13278,
    16858,
    27550,
    18719,
    48277,
    28639,
    32971,
    20762,
    17972,
    18975,
    15609,
    18617,
    6124,
    2116,
    3044,
    35493
  )
)
```


```{r}
head(cdc)
```

> Q1, Q2.

```{r}
library(ggplot2)

ggplot(cdc) +
  aes(year, cases) +
  geom_line() +
  geom_vline(xintercept = 1946, col="blue") +
  geom_vline(xintercept = 1996, col="red") +
  geom_vline(xintercept = 2020, col="gray") +
  geom_vline(xintercept = 2003, col="darkgreen")
```
> Q3. Describe what happened after the introduction of the aP vaccine? Do you have a possible explanation for the observed trend?

There were high case numbers before the first wP (whole-cell) vaccine roll out in 1946 then a rapid decline in case numbers until 2004 when we have our first large-scale outbreak of pertussis again, not long after the switch to aP vaccine. This could be due to people being more skeptical of vaccination, but it is unclear what the difference is between people that have gotten the wP vs. aP vaccines. There is a notable COVID related dip and recent rapid rise.


Q. What is different about the immune response to infection if you had an older wP vaccine vs the newer aP vaccine?

## Computational Models of Immunity - Pertussis Boost (CMI-PB)

The CMI-PB project aims to address this key question: what is different between aP and wP individuals?

We can get all the data from this ongoing project via JSON API calls
For this we will use the **jsonlite** package. We can install with: `install.packages("jsonlite")`

```{r}
library(jsonlite)
subject <- read_json("https://www.cmi-pb.org/api/v5_1/subject", simplifyVector = TRUE)

head(subject)
```

> Q. How many individuals "subjects" are in this data set?

```{r}
nrow(subject)
```


> Q4. How many wP and aP primed individuals are in this dataset?

```{r}
table( subject$infancy_vac )
```

> Q5. How many male/female are there?

```{r}
table ( subject$biological_sex )
```

> Q6. What is the breakdown of race and biological sex?

```{r}
table(subject$race, subject$biological_sex)
```

This is not representative of the US population but it is the biggest dataset of its type so let's see what we can learn.

Obtain more data from CMI-PB:

```{r}
specimen <- read_json("http://cmi-pb.org/api/v5_1/specimen", simplifyVector = TRUE)
ab_data <- read_json("http://cmi-pb.org/api/v5_1/plasma_ab_titer", simplifyVector = TRUE)
```

```{r}
head(specimen)
```

```{r}
head(ab_data)
```

I now have 3 tables of data from CMI-PB: `subject`, `specimen`, `ab_data`. I need to "join" these tables so I will have all the info I need to work with.

For this we will use the `inner_join()` function from **dplyr** package. 

> Q9. Complete the code to join specimen and subject tables to make a new merged data frame containing all specimen records along with their associated subject details:

```{r}
library(dplyr)

meta <- inner_join(subject, specimen)
head(meta)
```

```{r}
dim(subject)
dim(specimen)
```

```{r}
dim(meta)
```

>Q10. Now using the same procedure join meta with titer data so we can further analyze this data in terms of time of visit aP/wP, male/female etc.

Now we can join our `ab_data` table to `meta` so we have all the info we need about antibody levels.

```{r}
abdata <- inner_join(meta, ab_data)
head(abdata)
```

>Q11. How many different antibody isotypes are there in this dataset? How many specimens (i.e. entries in abdata) do we have for each isotype?

```{r}
table(abdata$isotype)
```

> Q12. What are the different $dataset values in abdata and what do you notice about the number of rows for the most “recent” dataset?

```{r}
table(abdata$dataset)
```

The most "recent" dataset (2023) has double the number of rows of the previous year.

```{r}
table(abdata$antigen)
```

> Q13. Complete the following code to make a summary boxplot of Ab titer levels (MFI) for all antigens:

I want a plot of antigen levels across the whole dataset.

```{r}
ggplot(abdata) +
  aes(MFI, antigen) +
  geom_boxplot()
```

```{r}
ggplot(abdata) +
  aes(MFI_normalised, antigen) +
  geom_boxplot()
```

Antigens like FIM2/3, PT, FELD1 have quite a large range of values. Others like Measles don't show much activity. 

```{r}
ggplot(abdata) +
  aes(MFI_normalised, antigen) +
  geom_boxplot() +
  xlim(0,75) +
  facet_wrap(vars(visit), nrow=2)
```

> Q14. What antigens show differences in the level of IgG antibody titers recognizing them over time? Why these and not others?

IgG antibodies against antigens like PT, PRN, FIM2/23, and FHA seem to decrease over time. This is because these are the antigens that are introduced in the aP and wP vaccines and the presence of IgG that detect them decrease over time.

> Q. Are there differences at the whole-dataset level between aP and wP?

```{r}
ggplot(abdata) +
  aes(MFI_normalised, antigen, col=infancy_vac) +
  geom_boxplot()
```

```{r}
ggplot(abdata) +
  aes(MFI_normalised, antigen, col=infancy_vac) +
  geom_boxplot() +
  facet_wrap(~infancy_vac)
```

## Examine IgG Ab titer levels

For this I need to select out just isotype IgG. 

```{r}
igg <- abdata %>% 
  filter(isotype == "IgG")
head(igg)
```

An overview boxplot:

```{r}
ggplot(igg) +
  aes(MFI_normalised, antigen, col=infancy_vac) +
  geom_boxplot()
```

Digging in further to look at the time course of IgG isotype PT antigen levels across aP and wP individuals:

```{r}
abdata.21 <- abdata %>% filter(dataset == "2021_dataset") ## Filter to include 2021 data only

abdata.21 %>% ## Filter to look at IgG PT data only
  filter(isotype == "IgG",  antigen == "PT") %>%
  ggplot() +   ## Plot
    aes(x=planned_day_relative_to_boost,
        y=MFI_normalised,
        col=infancy_vac,
        group=subject_id) +
    geom_point() +
    geom_line() +
    geom_vline(xintercept=0, linetype="dashed") +
    geom_vline(xintercept=14, linetype="dashed") +
  labs(title="2021 dataset IgG PT",
       subtitle = "Dashed lines indicate day 0 (pre-boost) and 14 (apparent peak levels)")
```






